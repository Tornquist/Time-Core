name: CI
on: [push]
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DB_USER: time
      DB_PASS: time
      DB_NAME: timetest
      TOKEN_SALT: testsalt
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_HOST: 127.0.0.1
          MYSQL_USER: time
          MYSQL_PASSWORD: time
          MYSQL_ROOT_PASSWORD: time
          MYSQL_DATABASE: timetest
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=10

    # services:
    #   mysql:
    #     image: mysql:5.7
    #     env:
    #       MYSQL_HOST: 127.0.0.1
    #       MYSQL_USER: time
    #       MYSQL_ROOT_PASSWORD: time
    #       MYSQL_DATABASE: timetest
    #     ports:
    #       - 3306:3306
    #     options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=10s --health-retries=10
    #   # mysql:
    #   #   image: mysql:5.7
    #   #   env:
    #   #     MYSQL_DATABASE: timetest
    #   #     MYSQL_HOST: 127.0.0.1
    #   #     MYSQL_USER: root
    #   #     MYSQL_ALLOW_EMPTY_PASSWORD: yes
    #   #     MYSQL_PASSWORD:
    #   #     MYSQL_ROOT_PASSWORD: password
    #   #   ports:
    #   #     - 3306:3306
    #   #   options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '12.16.0'

    - name: mysql version
      run: mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports['3306'] }} -u ${{ env.DB_USER }} -p ${{ env.DB_PASS }} -e "SELECT @@VERSION"

    # Create DB
    - run: sudo /etc/init.d/mysql start
    - run: sleep 2
    - run: mysql -uroot -h127.0.0.1 -proot -e "CREATE USER '${{ env.DB_USER }}'@'localhost' IDENTIFIED BY '${{ env.DB_PASS }}';"
    - run: mysql -uroot -h127.0.0.1 -proot -e "GRANT ALL PRIVILEGES ON * . * TO '${{ env.DB_USER }}'@'localhost';"

    - run: npm install
    - name: Configure DB
      run:
        npm run db-reset
        npm run db-up
    - run: npm test
    - run: npm run coverage
